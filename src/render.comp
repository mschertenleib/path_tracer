#version 450

#extension GL_EXT_scalar_block_layout : require

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(binding = 0, rgba32f) uniform image2D storage_image;

layout(binding = 2, scalar) buffer Vertices
{
    vec3 vertices[];
};

layout(binding = 3, scalar) buffer Indices
{
    uint indices[];
};

layout(push_constant) uniform Push_constants
{
    uint rng_seed;
};

uint hash(uint x)
{
    x += x << 10;
    x ^= x >> 6;
    x += x << 3;
    x ^= x >> 11;
    x += x << 15;
    return x;
}

float random(inout uint rng_state)
{
    rng_state ^= rng_state << 13;
    rng_state ^= rng_state >> 17;
    rng_state ^= rng_state << 5;
    return float(rng_state) * (1.0 / 4294967295.0);
}

void main()
{
    const uvec2 image_size = imageSize(storage_image);

    if (gl_GlobalInvocationID.x >= image_size.x ||
    gl_GlobalInvocationID.y >= image_size.y)
    {
        return;
    }

    const uint pixel_index = gl_GlobalInvocationID.y * image_size.x + gl_GlobalInvocationID.x;
    uint rng_state = hash(rng_seed + pixel_index);
    const vec4 color = vec4(random(rng_state), random(rng_state), random(rng_state), 1.0);

    imageStore(storage_image, ivec2(gl_GlobalInvocationID.xy), color);
}
